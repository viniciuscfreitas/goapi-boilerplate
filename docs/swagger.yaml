definitions:
  handlers.CreateUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      password:
        minLength: 6
        type: string
      role:
        type: string
    required:
    - email
    - name
    - password
    - role
    type: object
  handlers.ErrorResponse:
    properties:
      error:
        type: string
      message:
        type: string
    type: object
  handlers.LoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handlers.UpdateUserRequest:
    properties:
      email:
        type: string
      name:
        type: string
      role:
        type: string
    type: object
  usecase.ListUsersOutput:
    properties:
      total:
        type: integer
      users:
        items:
          $ref: '#/definitions/user.User'
        type: array
    type: object
  user.Role:
    enum:
    - admin
    - user
    - guest
    type: string
    x-enum-varnames:
    - RoleAdmin
    - RoleUser
    - RoleGuest
  user.User:
    properties:
      created_at:
        type: string
      email:
        type: string
      id:
        type: string
      is_active:
        type: boolean
      name:
        type: string
      role:
        $ref: '#/definitions/user.Role'
      updated_at:
        type: string
    type: object
info:
  contact: {}
paths:
  /auth/login:
    post:
      consumes:
      - application/json
      description: Autentica um usuário no sistema
      parameters:
      - description: Credenciais de login
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Login
      tags:
      - auth
  /users:
    get:
      consumes:
      - application/json
      description: Lista usuários com paginação
      parameters:
      - default: 0
        description: Offset para paginação
        in: query
        name: offset
        type: integer
      - default: 10
        description: Limite de registros
        in: query
        name: limit
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/usecase.ListUsersOutput'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Listar usuários
      tags:
      - users
    post:
      consumes:
      - application/json
      description: Cria um novo usuário no sistema
      parameters:
      - description: Dados do usuário
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Criar usuário
      tags:
      - users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: Remove um usuário do sistema
      parameters:
      - description: ID do usuário
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "204":
          description: No Content
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Deletar usuário
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Busca um usuário específico pelo ID
      parameters:
      - description: ID do usuário
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Buscar usuário por ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Atualiza os dados de um usuário existente
      parameters:
      - description: ID do usuário
        in: path
        name: id
        required: true
        type: string
      - description: Dados para atualização
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/handlers.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Atualizar usuário
      tags:
      - users
  /users/email:
    get:
      consumes:
      - application/json
      description: Busca um usuário específico pelo email
      parameters:
      - description: Email do usuário
        in: query
        name: email
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.User'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handlers.ErrorResponse'
      summary: Buscar usuário por email
      tags:
      - users
swagger: "2.0"
